# Generated by Django 4.2 on 2025-01-20 10:47

import account.models
import django.core.validators
from django.db import migrations, models
import django_jalali.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_at", django_jalali.db.models.jDateField(auto_now_add=True)),
                ("updated_at", django_jalali.db.models.jDateField(auto_now=True)),
                (
                    "avatar",
                    models.FileField(
                        blank=True,
                        upload_to="account/user/avatar",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "png", "jpeg"]
                            )
                        ],
                    ),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "state",
                    models.IntegerField(
                        choices=[
                            (0, "Suspend"),
                            (1, "Active"),
                            (2, "Reported"),
                            (3, "Banned"),
                        ],
                        default=0,
                    ),
                ),
                ("user_name", models.CharField(max_length=33)),
                (
                    "phone",
                    models.CharField(
                        max_length=17,
                        unique=True,
                        validators=[account.models.phone_validator],
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
